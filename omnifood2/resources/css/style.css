/* Orange color: #e67e22 */

/* ------------------------------------------- */
/* BASIC SET UP */
/* ------------------------------------------- */

/*First thing always set the margin+padding to zero and box-sizing*/
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

html {
/*    Set up some defaults, note these may be changed*/
    background-color: #fff;
    color: #555;
    font-family: 'Lato', 'Arial', sans-serif;
/*    Setting the global font-size here, so that we can use relative percentages elsewhere*/
    font-size: 20px;
    font-weight: 300;
/*    help readability*/
    text-rendering: optimizeLegibility;
}

/*Clearing right and left floats here so our layout works correctly. For example, the "HOW IT WORKS" section was missing it's 80px margin because of the previous floats. Have to go in to Lecture 47 for his discussion. But basically, you need to add the 'clearfix' class to the parent element of the floated children, in this case the ul element of the meals showcase.*/
.clearfix {
    zoom: 1
}
.clearfix:after {
    content: '.';
    clear: both;
    display: block;
    height: 0;
    visibility: hidden;
}

/* ------------------------------------------- */
/* REUSABLE COMPONENTS */
/* ------------------------------------------- */

.row {
    /* Here we are setting the one and only time a maximum width in absolute units */
    max-width: 1140px;
    /* Now center to page, and as always, to center a container within another container, do: */
    margin: 0 auto;
}

/*Here we are giving some whitespace around the different sections of the page - note, he uses padding, not margin here as he is going to use different background colors for the sections, and supposedly, this helps.*/
section {
    padding: 80px 0 80px 0;
}

.box {
    padding: 1%;
}

/* ---- HEADINGS ---- */
/* NOTE - here originally just had h1 defined, see header commit. Later, we started putting common things for different parts of the header. I am keeping original notes though. */

h1,
h2,
h3 {
/*    decrease this as size is larger*/
    font-weight: 300;
/*    Adjust wording:*/
    text-transform: uppercase;
}

h1 {
/*    Despite '*' making margins be 0, normalize.css adds margins to h elements, so gotta clear*/
    margin-top: 0;
    margin-bottom: 20px;
/*    Making white so it shows on the dark background*/
    color: #fff;
/*    Here use relative units because font-size is set in the html element, so to adjust, change in the html element.*/
    font-size: 200%;
    word-spacing: 4px;
    letter-spacing: 1px;
}

h2 {
    font-size: 180%;
    word-spacing: 2px;
    text-align: center;
    margin-bottom: 30px;
    letter-spacing: 1px;
}

h3 {
    font-size: 110%;
    margin-bottom: 15px;
}

/*Creating a line after the h2 element in the second section using pure CSS*/
h2:after {
    display: block;
    height: 2px;
    background-color: #e67e22;
/*    Todo this, we need some content, so we add a whitespace*/
    content: " ";
    width: 100px;
    margin: 0 auto;
    margin-top: 30px;
}

/* ---- PARAGRAPHS ---- */

/* This is for text going across the page.*/
/* He gives a great rule of thumb - 
you only want "2 alphabets worth of text on a line"
So like 102 characters */
/* Note how he uses the width and margin-left:
He sets the width to be 70%, so then he sets margin-left to be 15%, as.... 15% left + 70% width + 15% (not defined, but right) = 100%! */
.long-copy {
    line-height: 145%;
    width: 70%;
    margin: 0 15%;
}

/* We had defined .box above, but only want to change the text in the p's in the .box's so will do it this way: */
.box p {
    font-size: 90%
    line-height: 145%;
}

/* ---- ICONS ---- */
/* Note - these icons are actually fonts, so can use font rules */
.icon-big {
    font-size: 350%;
    color: #e67e22;
/*    Since these are fonts, they are inline, so need to set as block to use margin rules*/
    display: block;
    margin-bottom: 10px;
}

.icon-small {
    font-size: 120%;
    color: #e67e22;
/*    Make inline-block so we can assign some width*/
/*    Make inline-block so we can use text-align for centering*/
    display: inline-block;
    width: 30px;
    text-align: center;
/*    Add some margin to right*/
    margin-right: 10px;
/*    Secrets to align text and icons, note the negative margin-top takes space away*/
    line-height: 120%;
    vertical-align: middle;
    margin-top: -5px;
}

/* ---- LINKS ---- */
a:link,
a:visited {
    color: #e67e22;
/*    Get rid of underline*/
    text-decoration: none;
/*    Make a new custom underline*/
    padding-bottom: 1px;
    border-bottom: 2px solid #e67e22;
/*    Animate to make it cooler when hovering and being active*/
    transition: border-bottom 0.2s, color 0.2s;
    
}

a:hover,
a:active {
/*    Want color to change and underline to disappear*/
/*    Note that using "transparent" is a cleaner solution than changing the border-bottom to 0px*/
    color: #555;
    border-bottom: 2px solid transparent;
}

/* ---- BUTTONS ---- */
/*link is the normal resting state, visited is after clicked*/
.btn:link,
.btn:visited {
/*    inline-block - like inline but has padding and margin, it doesn't force a line break, usually an <a> element is inline, and that's what we are using for out buttons, so now we switch*/
    display: inline-block;
    padding: 10px 30px;
    font-weight: 300;
    text-decoration: none;
    border-radius: 200px;
/*    This will ANIMATE the color transitions for the buttons when going from link/visited to hover/active*/
    transition: background-color 0.2s, border 0.2s, color 0.2s;
}

.btn-full:link,
.btn-full:visited {
    background-color: #e67e22;
    border: 1px solid #e67e22;
    color: #fff;
    margin: 15px;
}

.btn-ghost:link,
.btn-ghost:visited {
    border: 1px solid #e67e22;
    color: #e67e22;
}

.btn:hover,
.btn:active {
    background-color: #cf6d17;
}

.btn-full:hover,
.btn-full:active {
    border: 1px solid #cf6d17;
}

.btn-ghost:hover,
.btn-ghost:active {
    border: 1px solid #cf6d17;
    color: #fff;
}


/* ------------------------------------------- */
/* HEADER */
/* ------------------------------------------- */

header {
/*    Note the relative path for the background image, this style.css file is in the resources/css/ dir already, so img/hero.jpg is relative to that*/
/*    Also using a linear gradient to shade - but note, we are setting both sides of the gradient to the same value to do this, there should be a better way*/
    background-image: linear-gradient(rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.7)), url(img/hero.jpg);
/*    We would not be able to see the image unless we set a height for the header div*/
    height: 100vh;
/*    Adjust the background image size to fit the header div*/
    background-size: cover;
/*    This will center the image, otherwise works from top-left*/
    background-position: center;
    background-attachment: fixed;
}

.hero-text-box {
/*    The goal here is to center the h1 text now within the viewport / hero image*/
/*    Not using responsive fluid grid here, because at the time this was made, the only way to horizontally and vertically align something was like this (or at least he says), for first we position absolute*/
    position: absolute;
/*    Then assign a width the same as the .row size, so it works like a row*/
    width: 1140px;
/*    Then with absolute, you specify where to start - he's saying 50% from the top and left of the containing div*/
    top: 50%;
    left: 50%;
/*    but as you will notice the h1's top left corner matches to this position, therefore, translate that back 50/50*/
    transform: translate(-50%, -50%);
}

.logo {
    height: 100px;
    width: auto;
/*    floating the logo on the left hand side, but really it seems it just puts the ul on the right! - really what it does, instead of having the ul below the img, it makes them side by side*/
    float: left;
/*    To help center the logo within the nav bar with the ul*/
    margin-top: 20px;
}

.main-nav {
/*    This will actually put the ul on the right hand side of the page!!!!*/
    float: right;
/*    Get rid of bullet points*/
    list-style: none;
/*    Some margin for the ul now, this will help center with logo*/
    margin-top: 55px;
}

/*Here we target just the li's of the main nav bar*/
.main-nav li {
/*    This removes the "returns" as the default for li's are to be block elements, inline-block allows the li's to be side by side*/
    display: inline-block;
    margin-left: 40px;
}

/*Here we target just a's in the li's of the main nav bar, with pseudoclasses on top! */
.main-nav li a:link,
.main-nav li a:visited {
    color: #fff;
    text-decoration: none;
    text-transform: uppercase;
    font-size: 90%;
/*    Here we are making a transparent border bottom which will turn orange later upon using hover and active below, along with a transition. And give some padding (space between content and border) */
    border-bottom: 2px solid transparent;
    transition: border-bottom 0.2s;
    padding: 8px 0;
}

.main-nav li a:hover,
.main-nav li a:active {
    border-bottom: 2px solid #e67e22;
    padding: 8px 0;
}

/* ------------------------------------------- */
/* FEATURES */
/* ------------------------------------------- */
.section-features .long-copy {
    margin-bottom: 30px;
}

/* ------------------------------------------- */
/* MEALS */
/* ------------------------------------------- */
.section-meals {
    padding: 0;
}
.meals-showcase {
    list-style: none;
    width: 100%;
}

.meals-showcase li {
/*    This must be block for this*/
    display: block;
/*    Floating left will bring them side by side*/
    float:left;
/*    Have to set the width of these at 25% cause there are 4 of them.*/
    width: 25%;
}

.meal-photo {
/*    Here, this just means it has 100% width of it's parent*/
    width: 100%;
/*    Again, normalize gives margin to img's*/
    margin: 0;
    /* Here we need to use `overflow: hidden` to prevent the pictures below from going outside of the window */
    overflow: hidden;
/*    Making the container black, then will fade images with opacity below, then further change on hover*/
    background-color: #000;
}

.meal-photo img {
/*    Here we again set the width to equal that of the parent, and auto for the height*/
    width: 100%;
    height: auto;
    /* Using transform here to make the image larger, fill in the space... but this will cause the images to overflow out of the window, so therefore, we need to make sure this doesn't happen, by adding overflow:hidden to the container .meal-photo */
    transform: scale(1.15);
/*    This will slow the scale on hover*/
    transition: transform 0.5s, opacity 0.5s;
/*    This is used to bring the black in the background up*/
    opacity: 0.7;
}

.meal-photo img:hover {
/*    Now on hover, it will zoom back out*/
/*    Note how 1.03 is used, this gets rid of the weird white lines*/
    transform: scale(1.03);
    opacity: 1;
}

/* ------------------------------------------- */
/* HOW IT WORKS */
/* ------------------------------------------- */
.section-steps {
    background-color: #f4f4f4;   
}

/*Using pseudo classes to work with the left and the right*/
.steps-box:first-child {
/*    Note, we are using text-align on an image, this is ok, as text-align works on inline-block elements, of which img is one.*/
    text-align: right;
/*    Using percentage here for fluid design, rather than use px*/
    padding-right: 3%; 
    margin-top: 30px;
}

.steps-box:last-child {
    padding-left: 3%;
    margin-top: 70px;
}

.app-screen {
/*    here, define the width of the image directly, relative to continer*/
    width: 40%;
}

.works-step {
    margin-bottom: 50px;
}

/*He's just showing here that you can add extra margin after the last of the 3 instructions step with this pseudoclass*/
.works-step:last-of-type {
    margin-bottom: 80px;
}

.works-step div {
/*    Building a CSS circle around the numbers*/
    color: #e67e22;
    border: 2px solid #e67e22;
/*    Keep from forcing a line break, keep the number inside along with the text*/
    display: inline-block;
    border-radius: 50%;
    width: 55px;
    height: 55px;
/*    Center the number in the circle*/
    text-align: center;
    padding: 5px;
/*    Float the element so circle is next to text*/
    float: left;
/*    Adjust number*/
    font-size: 150%;
    margin-right: 25px;
}

/*Hack to keep the app store and google store btns from being underlined, from the <a> tag stuff in the LINKS section above*/
.btn-app:link,
.btn-app:visited {
/*    To do this, we can't use "transparent" so have to set border to zero*/
    border: 0;
}

.btn-app img {
    height: 50px;
    width: auto;
    margin-right: 10px;
}

/* ------------------------------------------- */
/* CITIES */
/* ------------------------------------------- */

.box img {
    width: 100%;
    height: auto;
}
.city-features {
    margin-bottom: 5px;
}

/* ------------------------------------------- */
/* TESTIMONIALS */
/* ------------------------------------------- */
.section-testimonials {
    background-image: linear-gradient(rgba(0,0,0,0.7), rgba(0,0,0,0.7)), url(img/back-customers.jpg);
    background-size: cover;
    color: #fff;
/*    COOL - this effect makes the background stay still when scrolling!*/
    background-attachment: fixed;
}

blockquote {
    padding: 2%;
/*    Can only used font-style italic if you have included it in your font list*/
    font-style: italic;
    line-height: 145%;
/*    Need this to position the quote in the ::before below */
    position: relative;
    margin-top: 40px;
}

blockquote::before {
/*    This is a glyph to make the quote sign*/
    content: "\201C";
    display: block;
    font-size: 400%;
/*    Help position it*/
    position: absolute;
    top: -5px;
    left: -5px;
}

cite {
    font-size: 90%;
    margin-top: 25px;
/*    Make this it's own line*/
    display: block;
}

cite img {
    height: 50px;
    border-radius: 50%;
    margin-right: 10px;
/*    This will align the text with the image, you'd think it would go above in cite*/
    vertical-align: middle;
}

/* ------------------------------------------- */
/* SIGN UP */
/* ------------------------------------------- */

.section-plans {
    background-color: #f4f4f4;
}

/*The plan box was used to make individual boxes*/
.plan-box {
    background-color: #fff;
    border-radius: 5px;
    width: 90%;
/*    Again, using the math 5% + 90% + 5%*/
    margin-left: 5%;
    box-shadow: 0 2px 2px #efefef;
}

.plan-box div {
    padding: 15px;
/*    add a light line at the bottom of the box*/
    border-bottom: 1px solid #e8e8e8;
}

.plan-box div:first-child {
    background-color: #fcfcfc;
/*    We lost the border radius on .plan box when we added this :first-child definition, so readding*/
    border-top-left-radius: 5px;
    border-top-right-radius: 5px;
}

.plan-box div:last-child {
    text-align: center;
/*    get rid of the light line defined above for the very bottom div, this way, the light line is just a separator between subsections*/
    border: 0;
}

.plan-price {
    font-size: 300%;
/*    Put font weight lower as size is large*/
    font-weight: 100;
    margin-bottom: 10px;
    color: #e67e22;
}

.plan-price span {
/*    Note - this percentage of font-size is derived from the parent above which is already 300%, therefore, to bring it back to 100%, we have to use 30%*/
    font-size: 30%;
    font-weight: 300;
}

.plan-price-meal {
    font-size: 80%;
}

.plan-box ul {
    list-style: none;
}

/*I think he had to add the ul to drill down to the li ??*/
.plan-box ul li {
   padding: 5px 0;
   
}